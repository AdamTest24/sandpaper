name: "01 Build and Deploy Site"

on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: '0 0 * * 2'
  workflow_dispatch:
    inputs:
      name:
        description: 'Who triggered this build?'
        required: true
        default: 'Maintainer (via GitHub)'
      reset:
        description: 'Should the cached markdown files be reset? (true/false)'
        required: true
        default: false
jobs:
  full-build:
    name: "Build Full Site"
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/Library/Application Support/renv
    steps:

      - name: "Checkout Lesson"
        uses: actions/checkout@v2

      - name: "Set up R"
        uses: r-lib/actions/setup-r@v1

      - name: "Set up Pandoc"
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: "2.11.4"

      - name: "Setup Lesson Engine"
        uses: carpentries/actions/setup-sandpaper@sandpaper-setup

      - name: "Check if We Need {renv}"
        id: renv
        run: |
          if [[ -d renv ]]; then
            echo "::set-output name=exists::true"
          fi

      - name: "Restore {renv} Cache"
        if: ${{ steps.renv.outputs.exists }}
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys:
            ${{ runner.os }}-renv-

      - name: "Fortify Local {renv} Packages"
        if: ${{ steps.renv.outputs.exists }}
        run: sandpaper::manage_deps(path = '${{ github.workspace }}', quiet = FALSE)
        shell: Rscript {0}

      - name: "Deploy Site"
        run: |
          reset <- "${{ github.event.inputs.reset }}" == "true"
          sandpaper::package_cache_trigger(TRUE)
          sandpaper:::ci_deploy(reset = reset)
        shell: Rscript {0}
