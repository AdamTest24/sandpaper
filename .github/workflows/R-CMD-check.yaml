on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}


    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   cache: '~/Library/Application Support/renv', r: 'release'}

          - {os: windows-latest, cache: '~\AppData\Local\renv', r: 'release'}
          # Use 3.6 to trigger usage of RTools35
          - {os: windows-latest, cache: '~\AppData\Local\renv', r: '3.6'}

          # Use older ubuntu to maximise backward compatibility
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'release', cov: 'true'}
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'oldrel-1'}
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'oldrel-2'}
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'oldrel-3'}
          - {os: ubuntu-18.04,   cache: '~/.local/share/renv', r: 'oldrel-4'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RENV_PATHS_ROOT: ${{ matrix.config.cache }}

    steps:
      - name: Record Linux Version
        if: runner.os == 'Linux'
        run: echo "OS_VERSION=`lsb_release -sr`" >> $GITHUB_ENV


      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2
        if: runner.os != 'Windows'
        with:
          pandoc-version: '2.11'

      - name: "Change windows temp dir"
        if: runner.os == 'Windows'
        run: echo "TMPDIR=${{ runner.temp }}" >> $GITHUB_ENV
        shell: bash

      - name: "Setup devel pandoc windows"
        uses: cderv/actions/setup-pandoc-nightly@nightly-pandoc
        if: runner.os == 'Windows'

      - name: "Setup R"
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: "Setup dependencies"
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            rstudio/rmarkdown
          needs: check

      - name: "Restore {renv} cache"
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-${{ env.OS_VERSION }}-renv-${{ runner.r }}-${{ hashFiles('.github/workflows/R-CMD-check.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.OS_VERSION }}-renv-${{ runner.r }}-

      - name: "Prime {renv} Cache"
        if: runner.os != 'Windows'
        run: |
          renv::init()
          system('rm -rf renv .Rprofile')
          system('git clean -fd -e .github')
          system('git restore .')
        shell: Rscript {0}

      - name: "Session info"
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: "Check"
        uses: r-lib/actions/check-r-package@v2
        if: runner.os != 'Windows'
        with:
          upload-snapshots: true

      - name: "Check"
        uses: r-lib/actions/check-r-package@v2
        if: runner.os == 'Windows'
        env:
          RENV_PATHS_ROOT: ~
        with:
          upload-snapshots: true
    


